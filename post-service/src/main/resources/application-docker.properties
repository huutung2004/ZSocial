# ==============================
# =  Docker Profile Settings  =
# ==============================

spring.application.name=post-service

# Cấu hình DB nếu chạy MySQL trong container (chỉnh sửa nếu cần)
spring.datasource.url=jdbc:mysql://mysql-post:3306/post_db
spring.datasource.username=root
spring.datasource.password=root

# Cổng của service trong container
server.port=8082

# Hibernate
spring.jpa.hibernate.ddl-auto=update

# user-service trong mạng Docker
user_service.url=http://user-service:8081

# Swagger
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs

# Actuator Endpoints
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# Resilience4j circuit breaker
resilience4j.circuitbreaker.configs.default.register-health-indicator=true
resilience4j.circuitbreaker.configs.default.sliding-window-size=10
resilience4j.circuitbreaker.configs.default.sliding-window-type=count_based
resilience4j.circuitbreaker.configs.default.failure-rate-threshold=50
resilience4j.circuitbreaker.configs.default.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.configs.default.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.configs.default.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.configs.default.minimum-number-of-calls=5

# Resilience4j timeout & retry
resilience4j.timelimiter.configs.default.timeout-duration=3s
resilience4j.retry.configs.default.max-attempts=3
resilience4j.retry.configs.default.wait-duration=2s
